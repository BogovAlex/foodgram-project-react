# Generated by Django 3.2.13 on 2022-05-22 17:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название продукта', max_length=200, verbose_name='Название')),
                ('measurement_unit', models.CharField(help_text='Введите единицу измерения продукта вида - кг/г/мг', max_length=200, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название рецепта', max_length=200, verbose_name='Название рецепта')),
                ('text', models.TextField(help_text='Описание рецепта', verbose_name='Описание')),
                ('image', models.ImageField(help_text='Загрузите фотографию готового блюда', upload_to='recipes/images/', verbose_name='Фотография готового блюда')),
                ('cooking_time', models.IntegerField(help_text='Введитe ориентировочное время приготовления по рецепту в минутах', validators=[django.core.validators.MinValueValidator(limit_value=1, message='Время приготовления не может быть меньше 1 минуты')], verbose_name='Время приготовления (мин)')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Введите дату публикации рецепта', verbose_name='Дата публикации рецепта')),
                ('author', models.ForeignKey(help_text='Выберите автора рецепта', on_delete=django.db.models.deletion.CASCADE, related_name='recipe', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название для тэга', max_length=200, verbose_name='Название')),
                ('color', models.CharField(help_text='Цвет вводится в формате HEX вида #000000', max_length=7, verbose_name='Цвет в HEX')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Уникальный слаг')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
        migrations.CreateModel(
            name='TagsRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.recipe')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tag', verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'Тэг рецепта',
                'verbose_name_plural': 'Тэги рецептов',
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Рецепт добавленный в корзину покупок', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='app.recipe', verbose_name='Рецепт')),
                ('user', models.ForeignKey(help_text='Укажите кому добавить рецепт в корзину покупок', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Список покупок',
                'verbose_name_plural': 'Списки покупок',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(help_text='Введите количество продукта (не менее 1)', validators=[django.core.validators.MinValueValidator(1, message='Не может быть меньше 1!')], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amount', to='app.ingredient', verbose_name='Ингредиент')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_amount', to='app.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Список ингредиентов в рецепте',
                'verbose_name_plural': 'Список ингредиентов в рецепте',
                'ordering': ['recipe'],
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(help_text='Выберите подходящие ингредиенты для рецепта', through='app.RecipeIngredient', to='app.Ingredient', verbose_name='Ингредиенты'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(help_text='Выберите подходящие тэги для рецепта', through='app.TagsRecipe', to='app.Tag', verbose_name='Тэги'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Рецепт добавленный в избранное', on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to='app.recipe', verbose_name='Рецепт')),
                ('user', models.ForeignKey(help_text='Укажите кому добавить рецепт в избранное', on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранное пользователей',
                'verbose_name_plural': 'Избранное пользователей',
                'ordering': ('user',),
            },
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_recipe_in_cart'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorite'),
        ),
    ]
